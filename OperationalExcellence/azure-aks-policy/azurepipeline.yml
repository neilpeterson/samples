trigger:
  branches:
    include:
      - arm-template-validation
  paths:
    include:
      - OperationalExcellence/azure-aks-policy/*

variables:
- name: resource-group
  value: aks-policy-$(Build.BuildId)
- name: location
  value: eastus
- name: spec
  value: aks-policy
- name: spec-version
  value: $(Build.BuildId)

pool:
  vmImage: 'ubuntu-latest'

stages:

- stage: static-analysis

#   jobs:
#   - job: tests
#     pool: Hosted Ubuntu 1604
#     continueOnError: false
#     timeoutInMinutes: 20

#     steps:

#     Temp test, replace this with ARM TTK / Python Test Suite?
#     - task: PowerShell@2
#       displayName: Install Pester
#       inputs:
#         targetType: 'inline'
#         script: |
#           Find-Module pester | Install-Module -Force

- stage: deploy
  # dependsOn: build

  jobs:
  - job: arm
    pool: Hosted Ubuntu 1604
    continueOnError: false

    steps:    
    
    - task: AzureCLI@2
      # Create resource group
      inputs:
        azureSubscription: 'azure-service-connection-mg'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az group create --name $(resource-group) --location $(location)'
        
    - task: AzureCLI@2
      # Create template spec
      inputs:
        azureSubscription: 'azure-service-connection-mg'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az ts create --name $(spec) --version $(spec-version) --resource-group $(resource-group) --location $(location) --template-file OperationalExcellence/azure-aks-policy/azuredeploy-spec.json' 
        
    - task: AzureCLI@2
      # Deploy template spec
      inputs:
        azureSubscription: 'azure-service-connection-mg'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
         id=$(az ts show --name $(spec) --version $(spec-version) --resource-group $(resource-group) --query id -o tsv)
         az deployment group create --resource-group $(resource-group) --template-spec $id
        
- stage: integration-test
  dependsOn: deploy

  # This stage could be generalized 

- stage: clean-up
  dependsOn: deploy

  # This stage would remove the deployment